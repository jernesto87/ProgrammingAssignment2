load(cachematrix.R)
setwd("C:\\Users\\jernesto87\\Desktop")
load(cachematrix.R)
load("cachematrix.R")
setwd("C:\\Users\\jernesto87\\Desktop\\ProgrammingAssignment2")
load("cachematrix.R")
load(cachematrix.R)
load("cachematrix.R")
return(i)
source("cachematrix.R")
cacheSolve()
x = matrix(c(2,4,7,4), nrow = 2, ncol = 2)
cacheSolve(x)
x
cacheSolve()
makeCacheMatrix(x)
cacheSolve(x)
cacheSolve()
cacheSolve(x)
cacheSolve(x)
solve(x)
cacheSolve(x)
makeCacheMatrix(x)
cacheSolve(x)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean()
makeVector()
cachemean(x)
x <- makeCacheMatrix(matrix(1:4, 2, 2))
x$get()
x <- makeCacheMatrix(matrix(c(2,4,7,4), nrow = 2, ncol = 2))
x$get()
my_mtrx <- makeCacheMatrix(matrix(c(2,4,7,4), nrow = 2, ncol = 2))
my_mtrx$get()
my_mtrx <- makeCacheMatrix(matrix(c(2,4,7,4), nrow = 2, ncol = 2))
my_mtrx$get()
source("cachematrix.R")
my_mtrx <- makeCacheMatrix(matrix(c(2,4,7,4), nrow = 2, ncol = 2))
my_mtrx$get()
View(makeVector)
source("cachematrix.R")
my_matrix <- makeCacheMatrix(matrix(c(2,4,7,4), nrow = 2, ncol = 2))
my_matrix$get()
source("cachematrix.R")
my_matrix <- makeCacheMatrix(matrix(c(2,4,7,4), nrow = 2, ncol = 2))
my_matrix$get()
my_matrix$getinverse()
cacheSolve(my_matrix)
my_matrix <- makeCacheMatrix(matrix(c(2,4,7,4), nrow = 2, ncol = 2))
my_matrix$set()
set(my_matrix)
my_matrix$get()
my_matrix$getinverse()
my_matrix <- makeCacheMatrix(matrix(c(2,4,7,4), nrow = 2, ncol = 2))
View(my_matrix)
View(my_matrix)
my_matrix
my_matrix$get()
cacheSolve(my_matrix)
my_matrix$get()
source("cachematrix.R")
my_matrix <- makeCacheMatrix(matrix(c(2,4,7,4), nrow = 2, ncol = 2))
my_matrix$get()
my_matrix$getinverse()
cacheSolve(my_matrix)
my_matrix$getinverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
cacheSolve(my_matrix)
source("cachematrix.R")
my_matrix <- makeCacheMatrix(matrix(c(2,4,7,4), nrow = 2, ncol = 2))
my_matrix$get()
my_matrix$getinverse()
cacheSolve(my_matrix)
source("cachematrix.R")
my_matrix <- makeCacheMatrix(matrix(c(2,4,7,4), nrow = 2, ncol = 2))
my_matrix$get()
my_matrix$getinverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$getinverse()
my_matrix$set(matrix(c(1, 2, 3, 4), 2, 2))
my_matrix$get()
my_matrix$getinverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$getinverse()
source("cachematrix.R")
